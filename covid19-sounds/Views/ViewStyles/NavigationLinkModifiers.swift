//
//  NavigationTest.swift
//  covid19-sounds
//
//  Authors:
//
//    Andreas Grammenos
//
//  Copyright Â© 2020 Computer Lab / Mobile Systems Group. All rights reserved.
//

import Foundation
import SwiftUI

/// The navigation link modifier as a `ViewModifier` which applies our desired styles in each of
///  the `NavigationLink` view generated by our `NavigationLinkFactory`.
///
struct NavigationLinkModifier: ViewModifier {
  /// handler to be run in the modifier, if not nil
  let handler: (() -> Void)?
  //
  /// This is the default constructor and accepts a `handler` which is executed, if present, after the `TapGesture
  /// ` event ends
  ///
  /// - Parameter handler: the handler to be executed on the `TapGesture` end event.
  ///
  init(_ handler: (() -> Void)? = nil) {
    self.handler = handler
  }
  //
  /// This is the body modifier which applies the `GradientBackgroundStyle` and registers a `TapGesture`
  /// event to be fired after the tap ends; if a `handler` was provided upon initialisation it is invoked. All
  /// modifications happen on `content`
  ///
  /// - Parameter content: the content to be modified and returned as a transformed `View`.
  ///
  func body(content: Content) -> some View {
    content
      .buttonStyle(GradientBackgroundStyle())
      .simultaneousGesture(TapGesture().onEnded({
        if self.handler != nil {
          log.info("Trying to invoke tap gesture handler")
          self.handler!()
          log.info("Invoked tap gesture handler")
        } else {
          log.warning("Nil handler - skipping invocation")
        }
      }))
  }
}
